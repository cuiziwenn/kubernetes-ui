apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: backend-rolebinding
  namespace: apps
subjects:
  - kind: ServiceAccount
    name: backend-sa
roleRef:
  kind: Role
  name: backend-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: apps
  name: backend-role
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend-sa
  namespace: apps
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-ui-backend
  namespace: apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-ui-backend
  template:
    metadata:
      labels:
        app: k8s-ui-backend
    spec:
      serviceAccountName: backend-sa
      containers:
        - name: backend
          image: cuiziwenn/k8s-ui-backend:v1.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-ui-backend
  namespace: apps
spec:
  type: ClusterIP
  selector:
    app: k8s-ui-backend
  ports:
    - port: 8000
      targetPort: 8000

